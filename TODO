Ansatz mit Channels
container/ring statt slice-logbuffer

#define _GNU_SOURCE
#include <sys/mman.h>
#include <sched.h>
#include <stdio.h>
#include <unistd.h>
#include <stdlib.h>
#include <sys/capability.h>
int clonecallback(void* x) {
  struct __user_cap_header_struct ch = { .version=_LINUX_CAPABILITY_VERSION_3, .pid=0 };
  struct __user_cap_data_struct cd[2] = { 0 };
  chroot(".");
  capset(&ch,cd);
  printf("uid %u, euid %u, pid %u, parent pid %u\n",getuid(),geteuid(),getpid(),getppid());
  exit(0);
}

int main() {
  char* stack=mmap(NULL, 4096+8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_GROWSDOWN|MAP_STACK,-1,0);
  if (stack!=MAP_FAILED) {
    mprotect(stack,4096,PROT_NONE);       /* guard page */
    if (clone(clonecallback, stack+4096+8192, CLONE_NEWIPC|CLONE_NEWNET|CLONE_NEWNS|CLONE_NEWPID|CLONE_NEWUSER|CLONE_NEWUTS, /*arg*/ NULL)==-1) {
      perror("clone failed");
      return 0;
    }
    sleep(1);
  } else
    perror("mmap failed");
}
